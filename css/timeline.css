@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

body{
    width: 100%;
    height:100%;
    display: flex;
    background: #242424;
    flex-direction: column;
    font-family: 'Roboto', sans-serif;
}

.nav-bar {
    display:flex;
    padding-top:20px;
    justify-content: center;
}

.nav-button {
    font-size:20px;
    color:rgb(255, 246, 82);
    padding:10px;
    margin: 10px;
    border-radius: 6px;
    background: #242424;
    box-shadow:  8px 8px 16px #191919,
                 -8px -8px 16px #292828;
   transition: all .3s ease-in-out;
}

.nav-button:hover{
    color:white;
}

.message{
    margin-left:10%;
}
.section{
    display:flex;
    flex-direction:row;
}

.intro{
   margin-left: 20%;
   margin-top:10%;
   width:35%;
   transition: all .5s ease-in-out;
   margin-bottom:10%
}

.intro:hover{
    transform: scale(110%);
}

h1{
    display:flex;
    font-family: 'Roboto', sans-serif;
    color:white;
    font-size:80px;
}

.highlight {
    color:rgb(255, 246, 82);
    font-weight: bolder;
    margin-left:10px
}

p {
    color:white;
    line-height:40px;
    font-size:20px
}

a{
    cursor: grab;
}

.timeline-container {
    align-content: center;
}

:root {
    --primary-color: #212121;
    --background-color: #212121;
  }
  
  * {
    margin: 0;
    padding: 0;
  }
  
  body {
    background: var(--background-color);
    display: flex;
    justify-content: center;
  }
  
  /* Timeline Container */
  .timeline {
    background: var(--primary-color);
    margin: 20px auto;
    padding: 20px;
  }
  
  /* Card container */
  .card {
    position: relative;
    max-width: 1000px;
  }
  
  /* setting padding based on even or odd */
  .card:nth-child(odd) {
    padding: 30px 0 30px 30px;
  }
  .card:nth-child(even) {
    padding: 30px 30px 30px 0;
  }
  /* Global ::before */
  .card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid rgb(255, 246, 82);
  }
  
  /* Setting the border of top, bottom, left */
  .card:nth-child(odd)::before {
    left: 0px;
    top: -4.5px;
    bottom: -4.5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
  }
  
  /* Setting the border of top, bottom, right */
  .card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
  }
  
  /* Removing the border if it is the first card */
  .card:first-child::before {
    border-top: 0;
    border-top-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's odd */
  .card:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's even */
  .card:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
  }
  
  /* Information about the timeline */
  .info {
    display: flex;
    flex-direction: column;
    border-radius: 3px;
    background: linear-gradient(145deg, #202020, #272727);
    box-shadow:  3px 3px 6px #1e1e1e,
                 -3px -3px 6px #2a2a2a;
    color: gray;
    border-radius: 10px;
    padding: 10px;
  }
  
  /* Title of the card */
  .title {
    color: rgb(255, 246, 82);
    position: relative;
    font-size:30px;
    font-weight:bold;
  }
  
  /* Timeline dot  */
  .title::before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 999px;
    border: 3px solid rgb(255, 246, 82);
  }
  
  /* text right if the card is even  */
  .card:nth-child(even) > .info > .title {
    text-align: right;
  }
  
  /* setting dot to the left if the card is odd */
  .card:nth-child(odd) > .info > .title::before {
    left: -45px;
  }
  
  /* setting dot to the right if the card is odd */
  .card:nth-child(even) > .info > .title::before {
    right: -45px;
  }
  


  